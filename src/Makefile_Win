# written by jxzou at 20200808: Makefile under Windows
#
# To use this Makefile, you need to install
#  (1) GNU Make for Windows; (2) Intel Parallel Studio
#  and set corresponding environment variables properly

BIN = ..\bin

# --- ifort ----
F90 = ifort
FFLAGS = /O2 /fpp /heap-arrays
MKL_FLAGS = /Qmkl:sequential
LFLAGS = /libs:static

OBJ_addH2singlet = file_op.obj string_manipulate.obj read_fch.obj math_sub.obj \
                   addH2singlet.obj
OBJ_bas_fch2py = file_op.obj string_manipulate.obj util_wrapper.obj math_sub.obj \
                 rwwfn.obj bas_fch2py.obj
OBJ_bas_gau2molcas = file_op.obj string_manipulate.obj read_gms_inp.obj read_fch.obj \
                     bas_gau2molcas.obj
OBJ_bas_gms2bdf = file_op.obj string_manipulate.obj read_gms_inp.obj bas_gms2bdf.obj
OBJ_bas_gms2dal = file_op.obj string_manipulate.obj read_gms_inp.obj bas_gms2dal.obj
OBJ_bas_gms2molcas = file_op.obj string_manipulate.obj read_gms_inp.obj bas_gms2molcas.obj
OBJ_bas_gms2molpro = file_op.obj string_manipulate.obj read_gms_inp.obj bas_gms2molpro.obj
OBJ_bas_gms2psi = file_op.obj string_manipulate.obj read_gms_inp.obj bas_gms2psi.obj
OBJ_bas_gms2py = file_op.obj string_manipulate.obj read_gms_inp.obj bas_gms2py.obj
OBJ_bdf2fch = file_op.obj string_manipulate.obj math_sub.obj rwwfn.obj read_fch.obj \
              split_sp.obj bdf2fch.obj
OBJ_bdf2mkl = file_op.obj bdf2mkl.obj
OBJ_chk2gbw = file_op.obj util_wrapper.obj chk2gbw.obj
OBJ_dal2fch = file_op.obj string_manipulate.obj math_sub.obj rwwfn.obj split_sp.obj \
              dal2fch.obj
OBJ_dat2fch = file_op.obj string_manipulate.obj read_fch.obj math_sub.obj rwwfn.obj \
              dat2fch.obj
OBJ_extract_noon2fch = file_op.obj extract_noon2fch.obj
OBJ_fch2amo = file_op.obj string_manipulate.obj util_wrapper.obj read_fch.obj \
              split_sp.obj fch2amo.obj
OBJ_fch2bdf = file_op.obj string_manipulate.obj math_sub.obj rwwfn.obj \
              util_wrapper.obj read_fch.obj rwgeom.obj read_gms_inp.obj \
              split_sp.obj fch2bdf.obj
OBJ_fch2cfour = file_op.obj string_manipulate.obj util_wrapper.obj read_fch.obj \
                split_sp.obj fch2cfour.obj
OBJ_fch2com = file_op.obj string_manipulate.obj math_sub.obj rwwfn.obj \
              util_wrapper.obj read_fch.obj split_sp.obj fch2com.obj
OBJ_fch2dal = file_op.obj string_manipulate.obj math_sub.obj rwwfn.obj \
              util_wrapper.obj read_fch.obj split_sp.obj fch2dal.obj
OBJ_fch2mkl = file_op.obj string_manipulate.obj read_fch.obj util_wrapper.obj \
              read_mkl.obj fch2mkl.obj
OBJ_fch2inp = file_op.obj string_manipulate.obj read_fch.obj util_wrapper.obj \
              fch2inp.obj
OBJ_fch2inporb = file_op.obj string_manipulate.obj math_sub.obj rwwfn.obj \
                 util_wrapper.obj read_fch.obj split_sp.obj fch2inporb.obj
OBJ_fch2psi = file_op.obj string_manipulate.obj math_sub.obj rwwfn.obj \
              util_wrapper.obj read_fch.obj fch2psi.obj
OBJ_fch2qchem = file_op.obj string_manipulate.obj util_wrapper.obj read_fch.obj \
                split_sp.obj fch2qchem.obj
OBJ_fch2qm4d = file_op.obj string_manipulate.obj read_fch.obj rwgeom.obj \
               util_wrapper.obj fch2qm4d.obj
OBJ_fch_u2r = file_op.obj string_manipulate.obj fch_u2r.obj
OBJ_fch_mo_copy = file_op.obj math_sub.obj rwwfn.obj fch_mo_copy.obj
OBJ_fch2wfn = file_op.obj string_manipulate.obj read_fch.obj util_wrapper.obj \
              fch2wfn.obj
OBJ_frag_guess_wfn = file_op.obj string_manipulate.obj read_fch.obj mr_keyword.obj \
                     util_wrapper.obj math_sub.obj rwwfn.obj rwgeom.obj do_hf.obj \
                     read_gms_inp.obj call_qc_calc_int.obj construct_vir.obj \
                     ortho.obj frag_guess_wfn.obj
OBJ_gvb_correct_pairs = file_op.obj string_manipulate.obj math_sub.obj rwwfn.obj \
                        gvb_correct_pairs.obj
OBJ_gvb_exclude_XH = file_op.obj string_manipulate.obj math_sub.obj rwwfn.obj \
                     util_wrapper.obj call_qc_calc_int.obj rwwfn.obj rwgeom.obj \
                     wfn_analysis.obj read_gms_inp.obj gvb_exclude_XH.obj
OBJ_gvb_sort_pairs = file_op.obj gvb_sort_pairs.obj
OBJ_mkl2amo = file_op.obj string_manipulate.obj math_sub.obj util_wrapper.obj \
              mkl2amo.obj
OBJ_mkl2bdf = file_op.obj string_manipulate.obj math_sub.obj util_wrapper.obj \
              mkl2bdf.obj
OBJ_mkl2cfour = file_op.obj string_manipulate.obj math_sub.obj util_wrapper.obj \
                mkl2cfour.obj
OBJ_mkl2com = file_op.obj string_manipulate.obj math_sub.obj util_wrapper.obj \
              mkl2com.obj
OBJ_mkl2dal = file_op.obj string_manipulate.obj math_sub.obj util_wrapper.obj \
              mkl2dal.obj
OBJ_mkl2fch = file_op.obj string_manipulate.obj math_sub.obj rwwfn.obj read_fch.obj \
              read_mkl.obj mkl2fch.obj
OBJ_mkl2inp = file_op.obj string_manipulate.obj math_sub.obj util_wrapper.obj \
              mkl2inp.obj
OBJ_mkl2inporb = file_op.obj string_manipulate.obj math_sub.obj util_wrapper.obj \
                 mkl2inporb.obj
OBJ_mkl2gjf = file_op.obj string_manipulate.obj read_fch.obj read_mkl.obj \
              mkl2gjf.obj
OBJ_mkl2psi = file_op.obj string_manipulate.obj math_sub.obj util_wrapper.obj \
              mkl2psi.obj
OBJ_mkl2py = file_op.obj string_manipulate.obj util_wrapper.obj mkl2py.obj
OBJ_mkl2qchem = file_op.obj string_manipulate.obj util_wrapper.obj mkl2qchem.obj
OBJ_molden2fch = string_manipulate.obj read_natom.obj read_fch.obj read_mkl.obj \
                 molden2fch.obj
OBJ_orb2fch = file_op.obj string_manipulate.obj math_sub.obj rwwfn.obj \
              read_fch.obj split_sp.obj orb2fch.obj
OBJ_xml2fch = file_op.obj string_manipulate.obj math_sub.obj rwwfn.obj read_fch.obj \
              split_sp.obj xml2fch.obj
OBJ_solve_ON_matrix = file_op.obj string_manipulate.obj math_sub.obj rwwfn.obj \
                      solve_ON_matrix.obj

.PHONY: clean distclean addH2singlet bas_fch2py bas_gau2molcas bas_gms2bdf \
        bas_gms2dal bas_gms2molcas bas_gms2molpro bas_gms2psi bas_gms2py bdf2fch \
        bdf2mkl chk2gbw dal2fch dat2fch extract_noon2fch fch2amo fch2bdf fch2cfour \
        fch2com fch2dal fch2mkl fch2inp fch2inporb fch2psi fch2qchem fch2qm4d \
        fch_u2r fch_mo_copy fch2wfn frag_guess_wfn gvb_correct_pairs gvb_exclude_XH \
        gvb_sort_pairs mkl2amo mkl2bdf mkl2cfour mkl2com mkl2dal mkl2fch mkl2inp \
        mkl2inporb mkl2gjf mkl2psi mkl2py mkl2qchem molden2fch orb2fch xml2fch \
        solve_ON_matrix

%.obj: %.f90
	$(F90) /c $< -o $@ $(FFLAGS) $(MKL_FLAGS)

help:
	@echo  make [target], where the [target] could be
	@echo  help      : print the current information
	@echo  fch2amo   : generate fch2amo    (Gau-^>AMESP)
	@echo  fch2bdf   : generate fch2bdf    (Gau-^>BDF)
	@echo  fch2com   : generate fch2com    (Gau-^>Molpro)
	@echo  fch2dal   : generate fch2dal    (Gau-^>Dalton)
	@echo  fch2inp   : generate fch2inp    (Gau-^>GAMESS)
	@echo  fch2inporb: generate fch2inporb (Gau-^>OpenMolcas)
	@echo  fch2mkl   : generate fch2mkl    (Gau-^>ORCA)
	@echo  fch2psi   : generate fch2psi    (Gau-^>PSI4)
	@echo  fch2qchem : generate fch2qchem  (Gau-^>Q-Chem)
	@echo  bdf2fch   : generate bdf2fch    (BDF-^>Gau)
	@echo  chk2gbw   : generate chk2gbw    (Gau-^>ORCA)
	@echo  dat2fch   : generate dat2fch    (GAMESS-^>Gau)
	@echo  mkl2com   : generate mkl2com    (ORCA-^>Molpro)
	@echo  mkl2fch   : generate mkl2fch    (ORCA-^>Gau)
	@echo  mkl2gjf   : generate mkl2gjf    (ORCA-^>Gau)
	@echo  orb2fch   : generate orb2fch    (OpenMolcas-^>Gau)
	@echo  xml2fch   : generate xml2fch    (Molpro-^>Gau)
	@echo  all       : all executables
	@echo  clean     : delete *.mod *.obj
	@echo  distclean : delete *.mod *.obj and clean ..\bin

addH2singlet: $(OBJ_addH2singlet)
	$(F90) $(OBJ_addH2singlet) -o $(BIN)\addH2singlet $(FFLAGS) $(MKL_FLAGS) $(LFLAGS)

bas_fch2py: $(OBJ_bas_fch2py)
	$(F90) $(OBJ_bas_fch2py) -o $(BIN)\bas_fch2py $(FFLAGS) $(MKL_FLAGS) $(LFLAGS)
	@echo bas_fch2py requires utilities fch2inp and bas_gms2py, please also compile them

bas_gau2molcas: $(OBJ_bas_gau2molcas)
	$(F90) $(OBJ_bas_gau2molcas) -o $(BIN)\bas_gau2molcas $(FFLAGS) $(LFLAGS)

bas_gms2bdf: $(OBJ_bas_gms2bdf)
	$(F90) $(OBJ_bas_gms2bdf) -o $(BIN)\bas_gms2bdf $(FFLAGS) $(LFLAGS)

bas_gms2dal: $(OBJ_bas_gms2dal)
	$(F90) $(OBJ_bas_gms2dal) -o $(BIN)\bas_gms2dal $(FFLAGS) $(LFLAGS)

bas_gms2molcas: $(OBJ_bas_gms2molcas)
	$(F90) $(OBJ_bas_gms2molcas) -o $(BIN)\bas_gms2molcas $(FFLAGS) $(LFLAGS)

bas_gms2molpro: $(OBJ_bas_gms2molpro)
	$(F90) $(OBJ_bas_gms2molpro) -o $(BIN)\bas_gms2molpro $(FFLAGS) $(LFLAGS)

bas_gms2psi: $(OBJ_bas_gms2psi)
	$(F90) $(OBJ_bas_gms2psi) -o $(BIN)\bas_gms2psi $(FFLAGS) $(LFLAGS)

bas_gms2py: $(OBJ_bas_gms2py)
	$(F90) $(OBJ_bas_gms2py) -o $(BIN)\bas_gms2py $(FFLAGS) $(LFLAGS)

bdf2fch: $(OBJ_bdf2fch)
	$(F90) $(OBJ_bdf2fch) -o $(BIN)\bdf2fch $(FFLAGS) $(LFLAGS)

bdf2mkl: $(OBJ_bdf2mkl)
	$(F90) $(OBJ_bdf2mkl) -o $(BIN)\bdf2mkl $(FFLAGS) $(LFLAGS)

chk2gbw: $(OBJ_chk2gbw)
	$(F90) $(OBJ_chk2gbw) -o $(BIN)\chk2gbw $(FFLAGS) $(LFLAGS)

dal2fch: $(OBJ_dal2fch)
	$(F90) $(OBJ_dal2fch) -o $(BIN)\dal2fch $(FFLAGS) $(MKL_FLAGS) $(LFLAGS)

dat2fch: $(OBJ_dat2fch)
	$(F90) $(OBJ_dat2fch) -o $(BIN)\dat2fch $(FFLAGS) $(MKL_FLAGS) $(LFLAGS)

fch2amo: $(OBJ_fch2amo)
	$(F90) $(OBJ_fch2amo) -o $(BIN)\fch2amo $(FFLAGS) $(LFLAGS)

fch2bdf: $(OBJ_fch2bdf)
	$(F90) $(OBJ_fch2bdf) -o $(BIN)\fch2bdf $(FFLAGS) $(LFLAGS)
	@echo fch2bdf requires utilities fch2inp and bas_gms2bdf, please also compile them

fch2cfour: $(OBJ_fch2cfour)
	$(F90) $(OBJ_fch2cfour) -o $(BIN)\fch2cfour $(FFLAGS) $(LFLAGS)

fch2com: $(OBJ_fch2com)
	$(F90) $(OBJ_fch2com) -o $(BIN)\fch2com $(FFLAGS) $(LFLAGS)
	@echo fch2com requires utilities fch2inp and bas_gms2molpro, please also compile them

fch2dal: $(OBJ_fch2dal)
	$(F90) $(OBJ_fch2dal) -o $(BIN)\fch2dal $(FFLAGS) $(MKL_FLAGS) $(LFLAGS)
	@echo fch2dal requires utilites fch2inp and bas_gms2dal, please also compile them

fch2mkl: $(OBJ_fch2mkl)
	$(F90) $(OBJ_fch2mkl) -o $(BIN)\fch2mkl $(FFLAGS) $(LFLAGS)

fch2inp: $(OBJ_fch2inp)
	$(F90) $(OBJ_fch2inp) -o $(BIN)\fch2inp $(FFLAGS) $(LFLAGS)

fch2inporb: $(OBJ_fch2inporb)
	$(F90) $(OBJ_fch2inporb) -o $(BIN)\fch2inporb $(FFLAGS) $(LFLAGS)
	@echo fch2inporb requires utilities fch2inp and bas_gms2molcas, please also compile them

fch2psi: $(OBJ_fch2psi)
	$(F90) $(OBJ_fch2psi) -o $(BIN)\fch2psi $(FFLAGS) $(LFLAGS)
	@echo fch2psi requires utilities fch2inp and bas_gms2psi, please also compile them

fch2qchem: $(OBJ_fch2qchem)
	$(F90) $(OBJ_fch2qchem) -o $(BIN)\fch2qchem $(FFLAGS) $(LFLAGS)

fch2qm4d: $(OBJ_fch2qm4d)
	$(F90) $(OBJ_fch2qm4d) -o $(BIN)\fch2qm4d $(FFLAGS) $(LFLAGS)

fch_u2r: $(OBJ_fch_u2r)
	$(F90) $(OBJ_fch_u2r) -o $(BIN)\fch_u2r $(FFLAGS) $(LFLAGS)

fch_mo_copy: $(OBJ_fch_mo_copy)
	$(F90) $(OBJ_fch_mo_copy) -o $(BIN)\fch_mo_copy $(FFLAGS) $(LFLAGS)

fch2wfn: $(OBJ_fch2wfn)
	$(F90) $(OBJ_fch2wfn) -o $(BIN)\fch2wfn $(FFLAGS) $(LFLAGS)

frag_guess_wfn: $(OBJ_frag_guess_wfn)
	$(F90) $(OBJ_frag_guess_wfn) -o $(BIN)\frag_guess_wfn $(FFLAGS) $(LFLAGS)

gvb_correct_pairs: $(OBJ_gvb_correct_pairs)
	$(F90) $(OBJ_gvb_correct_pairs) -o $(BIN)\gvb_correct_pairs $(FFLAGS) $(MKL_FLAGS) $(LFLAGS)

gvb_exclude_XH: $(OBJ_gvb_exclude_XH)
	$(F90) $(OBJ_gvb_exclude_XH) -o $(BIN)\gvb_exclude_XH $(FFLAGS) $(MKL_FLAGS) $(LFLAGS)

gvb_sort_pairs: $(OBJ_gvb_sort_pairs)
	$(F90) $(OBJ_gvb_sort_pairs) -o $(BIN)\gvb_sort_pairs $(FFLAGS)

mkl2amo: $(OBJ_mkl2amo)
	$(F90) $(OBJ_mkl2amo) -o $(BIN)\mkl2amo $(FFLAGS) $(LFLAGS)

mkl2bdf: $(OBJ_mkl2bdf)
	$(F90) $(OBJ_mkl2bdf) -o $(BIN)\mkl2bdf $(FFLAGS) $(LFLAGS)

mkl2cfour: $(OBJ_mkl2cfour)
	$(F90) $(OBJ_mkl2cfour) -o $(BIN)\mkl2cfour $(FFLAGS) $(LFLAGS)

mkl2com: $(OBJ_mkl2com)
	$(F90) $(OBJ_mkl2com) -o $(BIN)\mkl2com $(FFLAGS) $(LFLAGS)

mkl2dal: $(OBJ_mkl2dal)
	$(F90) $(OBJ_mkl2dal) -o $(BIN)\mkl2dal $(FFLAGS) $(LFLAGS)

mkl2fch: $(OBJ_mkl2fch)
	$(F90) $(OBJ_mkl2fch) -o $(BIN)\mkl2fch $(FFLAGS) $(LFLAGS)

mkl2inp: $(OBJ_mkl2inp)
	$(F90) $(OBJ_mkl2inp) -o $(BIN)\mkl2inp $(FFLAGS) $(LFLAGS)

mkl2inporb: $(OBJ_mkl2inporb)
	$(F90) $(OBJ_mkl2inporb) -o $(BIN)\mkl2inporb $(FFLAGS) $(LFLAGS)

mkl2gjf: $(OBJ_mkl2gjf)
	$(F90) $(OBJ_mkl2gjf) -o $(BIN)\mkl2gjf $(FFLAGS) $(LFLAGS)

mkl2psi: $(OBJ_mkl2psi)
	$(F90) $(OBJ_mkl2psi) -o $(BIN)\mkl2psi $(FFLAGS) $(LFLAGS)

mkl2py: $(OBJ_mkl2py)
	$(F90) $(OBJ_mkl2py) -o $(BIN)\mkl2py $(FFLAGS) $(LFLAGS)

mkl2qchem: $(OBJ_mkl2qchem)
	$(F90) $(OBJ_mkl2qchem) -o $(BIN)\mkl2qchem $(FFLAGS) $(LFLAGS)

molden2fch: $(OBJ_molden2fch)
	$(F90) $(OBJ_molden2fch) -o $(BIN)\molden2fch $(FFLAGS) $(LFLAGS)

extract_noon2fch: $(OBJ_extract_noon2fch)
	$(F90) $(OBJ_extract_noon2fch) -o $(BIN)\extract_noon2fch $(FFLAGS) $(LFLAGS)

orb2fch: $(OBJ_orb2fch)
	$(F90) $(OBJ_orb2fch) -o $(BIN)\orb2fch $(FFLAGS) $(LFLAGS)

xml2fch: $(OBJ_xml2fch)
	$(F90) $(OBJ_xml2fch) -o $(BIN)\xml2fch $(FFLAGS) $(LFLAGS)

solve_ON_matrix: $(OBJ_solve_ON_matrix)
	$(F90) $(OBJ_solve_ON_matrix) -o $(BIN)\solve_ON_matrix $(FFLAGS) $(MKL_FLAGS) $(LFLAGS)

all: addH2singlet bas_fch2py bas_gau2molcas bas_gms2bdf bas_gms2dal bas_gms2molcas \
     bas_gms2molpro bas_gms2psi bas_gms2py bdf2fch bdf2mkl chk2gbw dal2fch dat2fch \
     extract_noon2fch fch2amo fch2bdf fch2cfour fch2com fch2dal fch2mkl fch2inp \
     fch2inporb fch2psi fch2qchem fch2qm4d fch_u2r fch_mo_copy fch2wfn frag_guess_wfn \
     gvb_exclude_XH gvb_sort_pairs mkl2amo mkl2bdf mkl2cfour mkl2com mkl2dal mkl2fch \
     mkl2inp mkl2inporb mkl2gjf mkl2psi mkl2py mkl2qchem molden2fch orb2fch xml2fch \
     solve_ON_matrix

clean:
	del *.obj *.mod

distclean:
	del *.obj *.mod ..\bin\*.exe

